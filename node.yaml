#!/bin/bash

until ! [[ -z $COREOS_PRIVATE_IPV4 ]]; do

		ENV=/etc/environment
		if [ -z "$ENV" ]; then
				echo usage: $0 /etc/environment
				exit 1
		fi
		# Test for rw
		sudo touch $ENV
		if [ $? -ne 0 ]; then
				echo exiting, unable to modify: $ENV
		fi
		echo "COREOS_PUBLIC_IPV4=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)" > /etc/environment
		echo "COREOS_PRIVATE_IPV4=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)" >> /etc/environment
		source /etc/environment

done

sed -e 's|--oem=ec2-compat|--from-ec2-metadata=http://169.254.169.254/ --from-file=/user_data.yml|g' -i'' /usr/share/oem/cloud-config.yml

cat > "/user_data.yml" <<EOF
#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /opt/bin/wupiao
    permissions: '0755'
    content: |
      #!/bin/bash
      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
      [ -n "$1" ] && \
        until curl -o /dev/null -sIf http://${1}; do \
          sleep 1 && echo .;
        done;
      exit $?

coreos:
  etcd2:
    name: __NAME__
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    advertise-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster: master.novalocal=http://__MASTER_IP__:2380
    proxy: on
  fleet:
    public-ip: $COREOS_PRIVATE_IPV4
    metadata: "role=minion"
  flannel:
    interface: $COREOS_PRIVATE_IPV4
  units:
    - name: rpcbind.service
      enable: true
      command: start
    - name: rpc-statd.service
      enable: true
      command: start
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=etcd2.service
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      drop-ins:
        - name: 51-docker-mirror.conf
          content: |
            [Unit]
            # making sure that flanneld finished startup, otherwise containers
            # won't land in flannel's network...
            Requires=flanneld.service
            After=flanneld.service
            [Service]
            Environment=DOCKER_OPTS=' --registry-mirror=http://__MASTER_IP__:5000'
            ExecStartPre=/opt/bin/wupiao __MASTER_IP__:5000
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        [Service]
        ExecStartPre=/usr/bin/wget -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v__KUBERNETES_VERSION__/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStartPre=/opt/bin/wupiao __MASTER_IP__:8080
        ExecStart=/opt/bin/kube-proxy \
          --master=__MASTER_IP__:8080 \
          --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/usr/bin/wget -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v__KUBERNETES_VERSION__/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStartPre=/usr/bin/mkdir -p /opt/kubernetes/manifests/
        ExecStartPre=/opt/bin/wupiao __MASTER_IP__:8080
        ExecStart=/opt/bin/kubelet \
          --address=0.0.0.0 \
          --port=10250 \
          --hostname_override=$COREOS_PRIVATE_IPV4 \
          --api_servers=__MASTER_IP__:8080 \
          --allow_privileged=true \
          --cluster_dns=10.100.0.10 \
          --cluster_domain=__DNS_DOMAIN__ \
          --logtostderr=true \
          --config=/opt/kubernetes/manifests/ \
          --cadvisor_port=4194 \
          --healthz_bind_address=0.0.0.0 \
          --healthz_port=10248
        Restart=always
        RestartSec=10
        WorkingDirectory=/root/
  update:
    group: __CHANNEL__
    reboot-strategy: off
EOF

export COREOS_PUBLIC_IPV4
export COREOS_PRIVATE_IPV4

update_engine_client -update
